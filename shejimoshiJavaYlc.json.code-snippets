{
  // Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "jv-mode-proxy": {
    "scope": "java",
    "prefix": "jv-mode-proxy",
    "body": [
      "public interface Image {",
      "    void showImage();",
      "}",
      "public class HighResolutionImage implements Image {",
      "",
      "    private URL imageURL;",
      "    private long startTime;",
      "    private int height;",
      "    private int width;",
      "",
      "    public int getHeight() {",
      "        return height;",
      "    }",
      "",
      "    public int getWidth() {",
      "        return width;",
      "    }",
      "",
      "    public HighResolutionImage(URL imageURL) {",
      "        this.imageURL = imageURL;",
      "        this.startTime = System.currentTimeMillis();",
      "        this.width = 600;",
      "        this.height = 600;",
      "    }",
      "",
      "    public boolean isLoad() {",
      "        // 模拟图片加载，延迟 3s 加载完成",
      "        long endTime = System.currentTimeMillis();",
      "        return endTime - startTime > 3000;",
      "    }",
      "",
      "    @Override",
      "    public void showImage() {",
      "        System.out.println(\"Real Image: \" + imageURL);",
      "    }",
      "}",
      "public class ImageProxy implements Image {",
      "",
      "    private HighResolutionImage highResolutionImage;",
      "",
      "    public ImageProxy(HighResolutionImage highResolutionImage) {",
      "        this.highResolutionImage = highResolutionImage;",
      "    }",
      "",
      "    @Override",
      "    public void showImage() {",
      "        while (!highResolutionImage.isLoad()) {",
      "            try {",
      "                System.out.println(\"Temp Image: \" + highResolutionImage.getWidth() + \" \" + highResolutionImage.getHeight());",
      "                Thread.sleep(100);",
      "            } catch (InterruptedException e) {",
      "                e.printStackTrace();",
      "            }",
      "        }",
      "        highResolutionImage.showImage();",
      "    }",
      "}",
      "public class ImageViewer {",
      "",
      "    public static void main(String[] args) throws Exception {",
      "        String image = \"http://image.jpg\";",
      "        URL url = new URL(image);",
      "        HighResolutionImage highResolutionImage = new HighResolutionImage(url);",
      "        ImageProxy imageProxy = new ImageProxy(highResolutionImage);",
      "        imageProxy.showImage();",
      "    }",
      "}"
    ]
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  },
  "jv-mode-": {
    "scope": "java",
    "prefix": "jv-mode-",
    "body": []
  }
}
